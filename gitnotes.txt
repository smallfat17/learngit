初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：

使用命令git add <file>，注意，可反复多次使用，添加多个文件；
使用命令git commit -m <message>，完成。

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

查看修改历史并且精简化输出 : git log --pretty=oneline

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

乱改了工作区，用 git checkout -- filename  删除工作区的修改
若工作区的乱改内容已经使用add添加到暂存区，用 git reset HEAD filename 使修改回退到工作区状态，再使用上述方法清楚工作区修改即可
若已经commit，使用 git reset --hard commit_id 命令回退版本

删除版本库文件 ： git rm filename

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。  $ git clone git@github.com:smallfat17/gitskills.git

Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。

Git鼓励大量使用分支：

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；

当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场。